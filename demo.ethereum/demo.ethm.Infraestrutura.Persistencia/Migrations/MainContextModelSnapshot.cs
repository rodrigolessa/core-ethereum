// <auto-generated />
using System;
using demo.ethm.Infraestrutura.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace demo.ethm.Infraestrutura.Persistencia.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Arquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<string>("Extensao")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("JWTCertificado")
                        .IsUnicode(false);

                    b.Property<string>("JWTChavePublica")
                        .IsUnicode(false);

                    b.Property<string>("MD5")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<string>("Mime")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SHA256")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SHA512")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Tamanho")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Arquivo");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<int>("IdPais");

                    b.Property<int>("IdTipoDocumento");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("OrgaoExpedidor")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Validade");

                    b.HasKey("Id");

                    b.HasIndex("IdPais");

                    b.HasIndex("IdTipoDocumento");

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.GeneroObra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Codigo");

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.HasKey("Id");

                    b.ToTable("GeneroObra");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.GeneroObraDescricao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<int?>("GeneroObraId");

                    b.Property<int>("IdIdioma");

                    b.HasKey("Id");

                    b.HasIndex("GeneroObraId");

                    b.HasIndex("IdIdioma");

                    b.ToTable("GeneroObraDescricao");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Idioma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime?>("DataDeDesativacao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<string>("HtmlCode")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ISO639Alfa2")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("ISO639Alfa3")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Idioma");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Obra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdaptacaoAutorOriginal")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("AdaptacaoTituloOriginal")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Ano")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DataDaExclusao");

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<string>("Edicao")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Editora")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("EhAverbacao");

                    b.Property<int?>("EhInedita");

                    b.Property<int?>("EhPublicada");

                    b.Property<int?>("EhRequerimento");

                    b.Property<string>("Grafica")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("IdGeneroObra");

                    b.Property<int?>("IdRepresentante");

                    b.Property<int>("IdRequerente");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("LocalPublicacao")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Observacoes")
                        .IsUnicode(false);

                    b.Property<int?>("Paginas");

                    b.Property<int?>("Situacao");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("TraducaoAutorOriginal")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("TraducaoTituloOriginal")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Volume")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdGeneroObra");

                    b.HasIndex("IdRepresentante");

                    b.HasIndex("IdRequerente");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Obra");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.ObraVinculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<int?>("EhAcrescimoConteudo");

                    b.Property<int?>("EhMudancaTitulo");

                    b.Property<int?>("EhPublicacao");

                    b.Property<int?>("EhSupressaoConteudo");

                    b.Property<int?>("EhTransferenciaTitular");

                    b.Property<int>("IdObraOriginal");

                    b.Property<string>("Outros")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdObraOriginal");

                    b.ToTable("ObraVinculo");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CodigoTelefone");

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime?>("DataDeDesativacao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<string>("ISO3166Alfa2")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("ISO3166Alfa3")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.PaisDescricao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<int>("IdIdioma");

                    b.Property<int?>("PaisId");

                    b.HasKey("Id");

                    b.HasIndex("IdIdioma");

                    b.HasIndex("PaisId");

                    b.ToTable("PaisDescricao");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Registro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<string>("HashTransacao")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("IdArquivo");

                    b.Property<int>("IdObra");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("IdArquivo");

                    b.HasIndex("IdObra");

                    b.ToTable("Registro");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.RegistroTransmissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bloco")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<decimal?>("CustoFinal");

                    b.Property<string>("DadoEnviado")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime?>("DataDeConclusao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<string>("De")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("GasLimite");

                    b.Property<decimal?>("GasPreco");

                    b.Property<int?>("GasUsado");

                    b.Property<string>("HashTransacao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Mensagem")
                        .IsUnicode(false);

                    b.Property<int?>("Nonce");

                    b.Property<string>("NotaPrivada")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Para")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("Posicao");

                    b.Property<int?>("RegistroId");

                    b.Property<string>("Status")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<decimal?>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("RegistroId");

                    b.ToTable("RegistroTransmissao");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Representante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<int?>("IdDocumento");

                    b.Property<int>("IdUsuario");

                    b.HasKey("Id");

                    b.HasIndex("IdDocumento")
                        .IsUnique();

                    b.HasIndex("IdUsuario");

                    b.ToTable("Representante");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Requerente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro")
                        .HasMaxLength(150);

                    b.Property<long?>("Cep");

                    b.Property<string>("Complemento")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("Escolaridade")
                        .HasMaxLength(50);

                    b.Property<int?>("IdDocumento");

                    b.Property<int?>("IdPais");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(150);

                    b.Property<string>("Municipio")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("Nascimento");

                    b.Property<string>("Naturalidade")
                        .HasMaxLength(50);

                    b.Property<string>("Nome");

                    b.Property<string>("NomeMae")
                        .HasMaxLength(100);

                    b.Property<string>("Numero")
                        .HasMaxLength(50);

                    b.Property<string>("Ocupacao")
                        .HasMaxLength(50);

                    b.Property<string>("OutroEstado")
                        .HasMaxLength(50);

                    b.Property<string>("Pseudonimo")
                        .HasMaxLength(50);

                    b.Property<string>("Telefone")
                        .HasMaxLength(12);

                    b.Property<int?>("Uf");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("IdDocumento")
                        .IsUnique();

                    b.HasIndex("IdPais");

                    b.HasIndex("UsuarioId");

                    b.ToTable("requerente");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.RequerenteRepresentante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<string>("Parentesco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("RepresentanteId");

                    b.Property<int?>("RequerenteId");

                    b.HasKey("Id");

                    b.HasIndex("RepresentanteId");

                    b.HasIndex("RequerenteId");

                    b.ToTable("RequerenteRepresentante");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Codigo");

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.TipoDocumentoDescricao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<int>("IdIdioma");

                    b.Property<int?>("TipoDocumentoId");

                    b.HasKey("Id");

                    b.HasIndex("IdIdioma");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("TipoDocumentoDescricao");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro")
                        .HasMaxLength(150);

                    b.Property<long?>("Cep");

                    b.Property<string>("Complemento")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("DataDaExclusao");

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("Foto");

                    b.Property<int?>("IdiomaId");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(150);

                    b.Property<string>("Municipio")
                        .HasMaxLength(150);

                    b.Property<string>("Nome")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Numero")
                        .HasMaxLength(50);

                    b.Property<string>("OutroEstado")
                        .HasMaxLength(50);

                    b.Property<int?>("PaisId");

                    b.Property<byte[]>("Senha")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("Situacao");

                    b.Property<string>("Telefone")
                        .HasMaxLength(12);

                    b.Property<int?>("Tipo");

                    b.Property<string>("TokenAlteracaoDeSenha");

                    b.Property<string>("TokenConfirmacaoEmail");

                    b.Property<int?>("Uf");

                    b.HasKey("Id");

                    b.HasIndex("IdiomaId");

                    b.HasIndex("PaisId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.UsuarioToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ativo");

                    b.Property<DateTime?>("DataDeAlteracao");

                    b.Property<DateTime>("DataDeInclusao");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioToken");
                });

            modelBuilder.Entity("demo.ethm.Infraestrutura.ExtensionLogger.Model.LogEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<int?>("EventId");

                    b.Property<string>("LogLevel");

                    b.Property<string>("Message");

                    b.HasKey("Id");

                    b.ToTable("LogEvento");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Documento", b =>
                {
                    b.HasOne("demo.ethm.Dominio.Entities.Pais", "Pais")
                        .WithMany("Documentos")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("demo.ethm.Dominio.Entities.TipoDocumento", "TipoDocumento")
                        .WithMany("Documentos")
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.GeneroObraDescricao", b =>
                {
                    b.HasOne("demo.ethm.Dominio.Entities.GeneroObra", "GeneroObra")
                        .WithMany("Descricoes")
                        .HasForeignKey("GeneroObraId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("demo.ethm.Dominio.Entities.Idioma", "Idioma")
                        .WithMany("GeneroObraDescricoes")
                        .HasForeignKey("IdIdioma")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Obra", b =>
                {
                    b.HasOne("demo.ethm.Dominio.Entities.GeneroObra", "GeneroObra")
                        .WithMany("Obras")
                        .HasForeignKey("IdGeneroObra")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("demo.ethm.Dominio.Entities.Representante", "Representante")
                        .WithMany("Obras")
                        .HasForeignKey("IdRepresentante");

                    b.HasOne("demo.ethm.Dominio.Entities.Requerente", "Requerente")
                        .WithMany("Obras")
                        .HasForeignKey("IdRequerente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("demo.ethm.Dominio.Entities.Usuario", "Usuario")
                        .WithMany("Obras")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.ObraVinculo", b =>
                {
                    b.HasOne("demo.ethm.Dominio.Entities.Obra", "ObraOriginal")
                        .WithMany("OriginalVinculos")
                        .HasForeignKey("IdObraOriginal")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.PaisDescricao", b =>
                {
                    b.HasOne("demo.ethm.Dominio.Entities.Idioma", "Idioma")
                        .WithMany("PaisDescricoes")
                        .HasForeignKey("IdIdioma")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("demo.ethm.Dominio.Entities.Pais", "Pais")
                        .WithMany("Descricoes")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Registro", b =>
                {
                    b.HasOne("demo.ethm.Dominio.Entities.Arquivo", "Arquivo")
                        .WithMany("Registros")
                        .HasForeignKey("IdArquivo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("demo.ethm.Dominio.Entities.Obra", "Obra")
                        .WithMany("Registros")
                        .HasForeignKey("IdObra")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.RegistroTransmissao", b =>
                {
                    b.HasOne("demo.ethm.Dominio.Entities.Registro", "Registro")
                        .WithMany("RegistroTransmissao")
                        .HasForeignKey("RegistroId");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Representante", b =>
                {
                    b.HasOne("demo.ethm.Dominio.Entities.Documento", "Documento")
                        .WithOne("Representante")
                        .HasForeignKey("demo.ethm.Dominio.Entities.Representante", "IdDocumento");

                    b.HasOne("demo.ethm.Dominio.Entities.Usuario", "Usuario")
                        .WithMany("Representantes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Requerente", b =>
                {
                    b.HasOne("demo.ethm.Dominio.Entities.Documento", "Documento")
                        .WithOne("Requerente")
                        .HasForeignKey("demo.ethm.Dominio.Entities.Requerente", "IdDocumento");

                    b.HasOne("demo.ethm.Dominio.Entities.Pais", "Nacionalidade")
                        .WithMany("Requerentes")
                        .HasForeignKey("IdPais");

                    b.HasOne("demo.ethm.Dominio.Entities.Usuario", "Usuario")
                        .WithMany("Requerentes")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.RequerenteRepresentante", b =>
                {
                    b.HasOne("demo.ethm.Dominio.Entities.Representante", "Representante")
                        .WithMany("RequerenteRepresentantes")
                        .HasForeignKey("RepresentanteId");

                    b.HasOne("demo.ethm.Dominio.Entities.Requerente", "Requerente")
                        .WithMany("RequerenteRepresentantes")
                        .HasForeignKey("RequerenteId");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.TipoDocumentoDescricao", b =>
                {
                    b.HasOne("demo.ethm.Dominio.Entities.Idioma", "Idioma")
                        .WithMany("TipoDocumentoDescricoes")
                        .HasForeignKey("IdIdioma")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("demo.ethm.Dominio.Entities.TipoDocumento", "TipoDocumento")
                        .WithMany("Descricoes")
                        .HasForeignKey("TipoDocumentoId");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.Usuario", b =>
                {
                    b.HasOne("demo.ethm.Dominio.Entities.Idioma", "Idioma")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdiomaId");

                    b.HasOne("demo.ethm.Dominio.Entities.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId");
                });

            modelBuilder.Entity("demo.ethm.Dominio.Entities.UsuarioToken", b =>
                {
                    b.HasOne("demo.ethm.Dominio.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioToken")
                        .HasForeignKey("UsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
